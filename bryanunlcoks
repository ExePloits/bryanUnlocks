-- Decompiler will be improved soon!
-- Decompiled with Konstant V2.1, a fast Luau decompiler made in Luau by plusgiant5 (https://discord.gg/wyButjTMhM)
-- Decompiled on 2024-12-30 23:33:19
-- Luau version 6, Types version 3
-- Time taken: 0.019484 seconds

local Players_upvr = game:GetService("Players")
local LocalPlayer_upvr = Players_upvr.LocalPlayer
local MemoryCard_upvr = LocalPlayer_upvr:WaitForChild("MemoryCard")
local Dinosaurs_upvr = game:GetService("ReplicatedStorage"):WaitForChild("Database"):WaitForChild("Dinosaurs")
local GameFunctions_upvr = workspace:WaitForChild("GameFunctions")
local Background = script.Parent:WaitForChild("Background")
local MenuButtons_upvr = Background:WaitForChild("MenuButtons")
local MapSelection_upvr = Background:WaitForChild("MapSelection")
local DNAStore_upvr = Background:WaitForChild("DNAStore")
local TradingFrame_upvr = Background:WaitForChild("TradingFrame")
local HatchEggFrame_upvr = Background:WaitForChild("HatchEggFrame")
local EggFrame_upvr = Background:WaitForChild("EggFrame")
local Buttons_upvr = TradingFrame_upvr:WaitForChild("Buttons")
local RequestTrade_upvr = TradingFrame_upvr:WaitForChild("RequestTrade")
local ConvertTokens_upvr = TradingFrame_upvr:WaitForChild("ConvertTokens")
local ConvertBtn_upvr = Buttons_upvr:WaitForChild("ConvertBtn")
local IncomingTradesBtn_upvr = Buttons_upvr:WaitForChild("IncomingTradesBtn")
local RequestTradeBtn_upvr = Buttons_upvr:WaitForChild("RequestTradeBtn")
local Trade_upvr = RequestTrade_upvr:WaitForChild("Trade")
local Offering_upvr = Trade_upvr:WaitForChild("Offering")
local Requesting_upvr = Trade_upvr:WaitForChild("Requesting")
local tbl_upvw = {"Empty", "Empty", "Empty", "Empty", "Empty", "Empty", "Empty", "Empty", "Empty"}
local tbl_upvw_3 = {"Empty", "Empty", "Empty", "Empty", "Empty", "Empty", "Empty", "Empty", "Empty"}
local children_upvw_2 = MemoryCard_upvr:WaitForChild("Dinosaurs"):GetChildren()
local children_upvw = MemoryCard_upvr:WaitForChild("Tokens"):GetChildren()
local tbl_upvw_2 = {}
local var31_upvw = "None"
local var32_upvw = "None"
local var33_upvw = "None"
Background:WaitForChild("HideBtn").MouseButton1Down:Connect(function() -- Line 68
    --[[ Upvalues[1]:
        [1]: MenuButtons_upvr (readonly)
    ]]
    if MenuButtons_upvr.Visible then
        MenuButtons_upvr.Visible = false
    else
        MenuButtons_upvr.Visible = true
    end
end)
function ResetPlayerList() -- Line 77
    --[[ Upvalues[1]:
        [1]: RequestTrade_upvr (readonly)
    ]]
    for _, v in pairs(RequestTrade_upvr.Players.Box:GetChildren()) do
        if not v:IsA("UIGridLayout") then
            v:Destroy()
        end
    end
end
local var40_upvw = true
local var41_upvw = true
function ResetRequestFrame() -- Line 89
    --[[ Upvalues[8]:
        [1]: RequestTrade_upvr (readonly)
        [2]: Trade_upvr (readonly)
        [3]: Offering_upvr (readonly)
        [4]: Requesting_upvr (readonly)
        [5]: tbl_upvw (read and write)
        [6]: tbl_upvw_3 (read and write)
        [7]: var31_upvw (read and write)
        [8]: var41_upvw (read and write)
    ]]
    RequestTrade_upvr.Inventory.Visible = false
    RequestTrade_upvr.Inventory:ClearAllChildren()
    RequestTrade_upvr.Trade.Send.Frame.BackgroundTransparency = 0.3
    Trade_upvr.TradingPartner.Text = "None"
    for _, v_2 in pairs(Offering_upvr:GetChildren()) do
        if v_2:IsA("ImageButton") then
            v_2.Image = ""
            v_2.ImageLabel.Image = ""
            v_2.TextLabel.Text = "Empty"
        end
    end
    for _, v_3 in pairs(Requesting_upvr:GetChildren()) do
        if v_3:IsA("ImageButton") then
            v_3.Image = ""
            v_3.ImageLabel.Image = ""
            v_3.TextLabel.Text = "Empty"
        end
    end
    tbl_upvw = {"Empty", "Empty", "Empty", "Empty", "Empty", "Empty", "Empty", "Empty", "Empty"}
    tbl_upvw_3 = {"Empty", "Empty", "Empty", "Empty", "Empty", "Empty", "Empty", "Empty", "Empty"}
    var31_upvw = "None"
    var41_upvw = true
end
function ResetAll() -- Line 121
    --[[ Upvalues[4]:
        [1]: children_upvw (read and write)
        [2]: MemoryCard_upvr (readonly)
        [3]: TradingFrame_upvr (readonly)
        [4]: Buttons_upvr (readonly)
    ]]
    children_upvw = MemoryCard_upvr.Tokens:GetChildren()
    for _, v_4 in pairs(TradingFrame_upvr:GetChildren()) do
        if v_4:IsA("Frame") and v_4.Name ~= "Buttons" then
            v_4.Visible = false
        end
    end
    for _, v_5 in pairs(Buttons_upvr:GetChildren()) do
        if v_5:IsA("TextButton") and v_5.Name ~= "CloseBtn" then
            v_5.Frame.Visible = false
        end
    end
end
function StartRequest() -- Line 137
    --[[ Upvalues[7]:
        [1]: RequestTrade_upvr (readonly)
        [2]: RequestTradeBtn_upvr (readonly)
        [3]: Players_upvr (readonly)
        [4]: LocalPlayer_upvr (readonly)
        [5]: var31_upvw (read and write)
        [6]: tbl_upvw_2 (read and write)
        [7]: var40_upvw (read and write)
    ]]
    ResetAll()
    ResetPlayerList()
    ResetRequestFrame()
    RequestTrade_upvr.Visible = true
    RequestTradeBtn_upvr.Frame.Visible = true
    for _, v_6_upvr in pairs(Players_upvr:GetChildren()) do
        if v_6_upvr ~= LocalPlayer_upvr then
            local clone_2_upvr = script.PlayerBtn:Clone()
            clone_2_upvr.Name = v_6_upvr.Name
            task.spawn(function() -- Line 155
                --[[ Upvalues[3]:
                    [1]: v_6_upvr (readonly)
                    [2]: Players_upvr (copied, readonly)
                    [3]: clone_2_upvr (readonly)
                ]]
                local any_GetUserThumbnailAsync_result1, any_GetUserThumbnailAsync_result2 = Players_upvr:GetUserThumbnailAsync(v_6_upvr.UserId, Enum.ThumbnailType.HeadShot, Enum.ThumbnailSize.Size420x420)
                local var73
                if clone_2_upvr then
                    var73 = clone_2_upvr
                    local function INLINED() -- Internal function, doesn't exist in bytecode
                        var73 = any_GetUserThumbnailAsync_result1
                        return var73
                    end
                    if not any_GetUserThumbnailAsync_result2 or not INLINED() then
                        var73 = "rbxassetid://0"
                    end
                    var73.ImageLabel.Image = var73
                end
            end)
            if v_6_upvr.Name == v_6_upvr.DisplayName then
                clone_2_upvr.TextLabel.Text = v_6_upvr.Name
            else
                clone_2_upvr.TextLabel.Text = v_6_upvr.DisplayName..'('..v_6_upvr.Name..')'
            end
            clone_2_upvr.ZIndex = 7
            clone_2_upvr.Parent = RequestTrade_upvr.Players.Box
            local var75_upvw = true
            clone_2_upvr.MouseButton1Down:Connect(function() -- Line 176
                --[[ Upvalues[5]:
                    [1]: var75_upvw (read and write)
                    [2]: v_6_upvr (readonly)
                    [3]: var31_upvw (copied, read and write)
                    [4]: RequestTrade_upvr (copied, readonly)
                    [5]: tbl_upvw_2 (copied, read and write)
                ]]
                -- KONSTANTERROR: [0] 1. Error Block 13 start (CF ANALYSIS FAILED)
                if not var75_upvw then
                else
                    if v_6_upvr then
                        ResetRequestFrame()
                        var31_upvw = v_6_upvr.Name
                        RequestTrade_upvr.Trade.TradingPartner.Text = v_6_upvr.Name
                        local MemoryCard = v_6_upvr:FindFirstChild("MemoryCard")
                        if MemoryCard then
                            tbl_upvw_2 = MemoryCard.Tokens:GetChildren()
                            -- KONSTANTWARNING: GOTO [38] #29
                        end
                    else
                        StartRequest()
                    end
                    -- KONSTANTERROR: [0] 1. Error Block 13 end (CF ANALYSIS FAILED)
                    -- KONSTANTERROR: [38] 29. Error Block 8 start (CF ANALYSIS FAILED)
                    var75_upvw = true
                    -- KONSTANTERROR: [38] 29. Error Block 8 end (CF ANALYSIS FAILED)
                end
            end)
        end
    end
    task.wait(0.1)
    var40_upvw = true
end
local IncomingTrades_upvr = TradingFrame_upvr:WaitForChild("IncomingTrades")
local CurrentTrades_upvr = workspace:WaitForChild("CurrentTrades")
local var79_upvw
local var80_upvw
local var81_upvw = true
function StartIncomingTrades() -- Line 205
    --[[ Upvalues[9]:
        [1]: IncomingTrades_upvr (readonly)
        [2]: CurrentTrades_upvr (readonly)
        [3]: LocalPlayer_upvr (readonly)
        [4]: var79_upvw (read and write)
        [5]: var80_upvw (read and write)
        [6]: var81_upvw (read and write)
        [7]: GameFunctions_upvr (readonly)
        [8]: IncomingTradesBtn_upvr (readonly)
        [9]: var40_upvw (read and write)
    ]]
    ResetAll()
    IncomingTrades_upvr.Box:ClearAllChildren()
    IncomingTrades_upvr.DetailFrame.Visible = false
    for i_7 = 1, 9 do
        local SOME_6 = IncomingTrades_upvr.DetailFrame.Offering:findFirstChild("Num"..i_7)
        SOME_6.Image = ""
        SOME_6.ImageLabel.Image = ""
        SOME_6.TextLabel.Text = "Empty"
    end
    for i_8 = 1, 9 do
        local SOME_3 = IncomingTrades_upvr.DetailFrame.Requesting:findFirstChild("Num"..i_8)
        SOME_3.Image = ""
        SOME_3.ImageLabel.Image = ""
        SOME_3.TextLabel.Text = "Empty"
    end
    for _, v_7_upvr in pairs(CurrentTrades_upvr:GetChildren()) do
        if v_7_upvr.Name == LocalPlayer_upvr.Name then
            local clone = script.RequestFrame:Clone()
            clone.Position = UDim2.new(0, 0, 0 * 0.1, 0)
            clone.TradeFrom.Text = "Trade request from: "..v_7_upvr.Creator.Value
            clone.Parent = IncomingTrades_upvr.Box
            local var94_upvw = true
            clone.Details.MouseButton1Down:Connect(function() -- Line 236
                --[[ Upvalues[7]:
                    [1]: var94_upvw (read and write)
                    [2]: IncomingTrades_upvr (copied, readonly)
                    [3]: v_7_upvr (readonly)
                    [4]: var79_upvw (copied, read and write)
                    [5]: var80_upvw (copied, read and write)
                    [6]: var81_upvw (copied, read and write)
                    [7]: GameFunctions_upvr (copied, readonly)
                ]]
                if not var94_upvw then
                else
                    var94_upvw = false
                    IncomingTrades_upvr.DetailFrame.TradeWith.Text = "Trading with: "..v_7_upvr.Creator.Value
                    for i_15 = 1, 9 do
                        if v_7_upvr.Offering:findFirstChild(i_15).Value ~= "Empty" then
                            local SOME_9 = IncomingTrades_upvr.DetailFrame.Offering:findFirstChild("Num"..i_15)
                            SOME_9.Image = "rbxgameasset://Images/Stone Token"
                            SOME_9.ImageLabel.Image = "rbxgameasset://Images/"..v_7_upvr.Offering:findFirstChild(i_15).Value
                            SOME_9.TextLabel.Text = v_7_upvr.Offering:findFirstChild(i_15).Value
                        end
                    end
                    for i_16 = 1, 9 do
                        if v_7_upvr.Requesting:findFirstChild(i_16).Value ~= "Empty" then
                            local SOME = IncomingTrades_upvr.DetailFrame.Requesting:findFirstChild("Num"..i_16)
                            SOME.Image = "rbxgameasset://Images/Stone Token"
                            SOME.ImageLabel.Image = "rbxgameasset://Images/"..v_7_upvr.Requesting:findFirstChild(i_16).Value
                            SOME.TextLabel.Text = v_7_upvr.Requesting:findFirstChild(i_16).Value
                        end
                    end
                    if var79_upvw then
                        var79_upvw:Disconnect()
                    end
                    if var80_upvw then
                        var80_upvw:Disconnect()
                    end
                    var81_upvw = true
                    var79_upvw = IncomingTrades_upvr.DetailFrame.Accept.MouseButton1Down:Connect(function() -- Line 268
                        --[[ Upvalues[3]:
                            [1]: var81_upvw (copied, read and write)
                            [2]: GameFunctions_upvr (copied, readonly)
                            [3]: v_7_upvr (copied, readonly)
                        ]]
                        if not var81_upvw then
                        else
                            var81_upvw = false
                            StartIncomingTrades()
                        end
                    end)
                    var80_upvw = IncomingTrades_upvr.DetailFrame.Decline.MouseButton1Down:Connect(function() -- Line 276
                        --[[ Upvalues[3]:
                            [1]: var81_upvw (copied, read and write)
                            [2]: GameFunctions_upvr (copied, readonly)
                            [3]: v_7_upvr (copied, readonly)
                        ]]
                        if not var81_upvw then
                        else
                            var81_upvw = false
                            GameFunctions_upvr.DeclineTrade:InvokeServer(v_7_upvr)
                            StartIncomingTrades()
                        end
                    end)
                    IncomingTrades_upvr.DetailFrame.Visible = true
                end
            end)
        end
    end
    IncomingTrades_upvr.Visible = true
    IncomingTradesBtn_upvr.Frame.Visible = true
    task.wait(0.1)
    var40_upvw = true
end
function loadTokenInventory(arg1, arg2) -- Line 299
    --[[ Upvalues[7]:
        [1]: MemoryCard_upvr (readonly)
        [2]: tbl_upvw (read and write)
        [3]: tbl_upvw_2 (read and write)
        [4]: tbl_upvw_3 (read and write)
        [5]: RequestTrade_upvr (readonly)
        [6]: Dinosaurs_upvr (readonly)
        [7]: var41_upvw (read and write)
    ]]
    -- KONSTANTWARNING: Variable analysis failed. Output will have some incorrect variable assignments
    -- KONSTANTERROR: [0] 1. Error Block 1 start (CF ANALYSIS FAILED)
    -- KONSTANTERROR: [0] 1. Error Block 1 end (CF ANALYSIS FAILED)
    -- KONSTANTERROR: [4] 3. Error Block 70 start (CF ANALYSIS FAILED)
    for _, v_8 in pairs(MemoryCard_upvr.Tokens:GetChildren()) do
        table.insert({}, v_8.Name)
        local _
    end
    local _, _, _ = pairs(tbl_upvw)
    -- KONSTANTERROR: [4] 3. Error Block 70 end (CF ANALYSIS FAILED)
end
for i_11_upvr = 1, 9 do
    Offering_upvr:findFirstChild("Num"..i_11_upvr).MouseButton1Down:connect(function() -- Line 464
        --[[ Upvalues[3]:
            [1]: var31_upvw (read and write)
            [2]: var41_upvw (read and write)
            [3]: i_11_upvr (readonly)
        ]]
        if var31_upvw ~= "None" then
            if not var41_upvw then return end
            var41_upvw = false
            loadTokenInventory("Offering", i_11_upvr)
        end
    end)
end
for i_12_upvr = 1, 9 do
    Requesting_upvr:findFirstChild("Num"..i_12_upvr).MouseButton1Down:connect(function() -- Line 476
        --[[ Upvalues[3]:
            [1]: var31_upvw (read and write)
            [2]: var41_upvw (read and write)
            [3]: i_12_upvr (readonly)
        ]]
        if var31_upvw ~= "None" then
            if not var41_upvw then return end
            var41_upvw = false
            loadTokenInventory("Requesting", i_12_upvr)
        end
    end)
end
local var118_upvw = true
function StartConvertTokens() -- Line 489
    --[[ Upvalues[6]:
        [1]: ConvertTokens_upvr (readonly)
        [2]: var118_upvw (read and write)
        [3]: var32_upvw (read and write)
        [4]: var33_upvw (read and write)
        [5]: ConvertBtn_upvr (readonly)
        [6]: var40_upvw (read and write)
    ]]
    ResetAll()
    ConvertTokens_upvr.Inventory:ClearAllChildren()
    ConvertTokens_upvr.Inventory.Visible = false
    var118_upvw = true
    var32_upvw = "None"
    ConvertTokens_upvr.SkinBtn.Image = ""
    ConvertTokens_upvr.SkinBtn.TextLabel.Text = "Empty"
    ConvertTokens_upvr.ConvertSkin.Frame.BackgroundTransparency = 0.3
    var33_upvw = "None"
    ConvertTokens_upvr.TokenBtn.ImageLabel.Image = ""
    ConvertTokens_upvr.TokenBtn.TextLabel.Text = "Empty"
    ConvertTokens_upvr.ConvertToken.Frame.BackgroundTransparency = 0.3
    ConvertTokens_upvr.Visible = true
    ConvertBtn_upvr.Frame.Visible = true
    task.wait(0.1)
    var40_upvw = true
end
function loadCurrentTokens() -- Line 514
    --[[ Upvalues[4]:
        [1]: var118_upvw (read and write)
        [2]: children_upvw (read and write)
        [3]: ConvertTokens_upvr (readonly)
        [4]: var33_upvw (read and write)
    ]]
    if not var118_upvw then
    else
        var118_upvw = false
        local len_4 = #children_upvw
        if 0 < len_4 then
            local ceiled_4 = math.ceil(len_4 / 40)
            local Inventory_upvr_2 = ConvertTokens_upvr.Inventory
            Inventory_upvr_2.Visible = true
            Inventory_upvr_2.CanvasSize = UDim2.new(1, 0, ceiled_4, 0)
            local var124 = 0
            for _, v_9_upvr in pairs(children_upvw) do
                local SOME_2 = Inventory_upvr_2:findFirstChild(v_9_upvr.Name)
                if not SOME_2 then
                    local clone_6 = script.DButton:Clone()
                    clone_6.Name = v_9_upvr.Name
                    clone_6.Image = "rbxgameasset://Images/Stone Token"
                    clone_6.Size = UDim2.new(0.125, 0, (1) / (5 * ceiled_4), 0)
                    clone_6.Position = UDim2.new(var124 * 0.125, 0, (0) * ((1) / (5 * ceiled_4)), 0)
                    if var124 == 7 then
                    else
                    end
                    clone_6.ZIndex = 8
                    clone_6.TextLabel.Text = v_9_upvr.Name
                    clone_6.Parent = Inventory_upvr_2
                    local ImageLabel = Instance.new("ImageLabel")
                    ImageLabel.ScaleType = Enum.ScaleType.Fit
                    ImageLabel.Active = false
                    ImageLabel.BackgroundTransparency = 1
                    ImageLabel.Size = UDim2.new(0.6, 0, 0.6, 0)
                    ImageLabel.Position = UDim2.new(0.2, 0, 0.2, 0)
                    if string.find(v_9_upvr.Name, "Diamond") then
                        clone_6.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
                        clone_6.UIGradient.Color = ColorSequence.new(Color3.fromRGB(85, 170, 255))
                        ImageLabel.Image = "rbxgameasset://Images/"..string.sub(v_9_upvr.Name, 9, string.len(v_9_upvr.Name))
                    elseif string.find(v_9_upvr.Name, "Rainbow") then
                        clone_6.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
                        clone_6.UIGradient.Color = ColorSequence.new({ColorSequenceKeypoint.new(0, Color3.fromRGB(255, 0, 0)), ColorSequenceKeypoint.new(0.16666666666666666, Color3.fromRGB(255, 127, 0)), ColorSequenceKeypoint.new(0.3333333333333333, Color3.fromRGB(255, 255, 0)), ColorSequenceKeypoint.new(0.5, Color3.fromRGB(0, 255, 0)), ColorSequenceKeypoint.new(0.6666666666666666, Color3.fromRGB(0, 0, 255)), ColorSequenceKeypoint.new(0.8333333333333334, Color3.fromRGB(75, 0, 130)), ColorSequenceKeypoint.new(1, Color3.fromRGB(148, 0, 211))})
                        ImageLabel.Image = "rbxgameasset://Images/"..string.sub(v_9_upvr.Name, 9, string.len(v_9_upvr.Name))
                    elseif string.find(v_9_upvr.Name, "Golden") and v_9_upvr.Name ~= "Golden Wraith Terror" then
                        clone_6.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
                        clone_6.UIGradient.Color = ColorSequence.new(Color3.fromRGB(255, 170, 0))
                        ImageLabel.Image = "rbxgameasset://Images/"..string.sub(v_9_upvr.Name, 8, string.len(v_9_upvr.Name))
                    elseif string.find(v_9_upvr.Name, "Glass") then
                        clone_6.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
                        clone_6.UIGradient.Color = ColorSequence.new(Color3.fromRGB(170, 255, 255))
                        ImageLabel.Image = "rbxgameasset://Images/"..string.sub(v_9_upvr.Name, 7, string.len(v_9_upvr.Name))
                    elseif string.find(v_9_upvr.Name, "Galactic") then
                        clone_6.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
                        clone_6.UIGradient.Color = ColorSequence.new({ColorSequenceKeypoint.new(0, Color3.fromRGB(0, 255, 255)), ColorSequenceKeypoint.new(0.2, Color3.fromRGB(0, 127, 255)), ColorSequenceKeypoint.new(0.4, Color3.fromRGB(0, 0, 255)), ColorSequenceKeypoint.new(0.6, Color3.fromRGB(127, 0, 255)), ColorSequenceKeypoint.new(0.8, Color3.fromRGB(255, 0, 255)), ColorSequenceKeypoint.new(1, Color3.fromRGB(255, 0, 127))})
                        ImageLabel.Image = "rbxgameasset://Images/"..v_9_upvr.Name
                    else
                        ImageLabel.Image = "rbxgameasset://Images/"..v_9_upvr.Name
                    end
                    ImageLabel.ZIndex = 9
                    ImageLabel.Parent = clone_6
                    local var135_upvw = true
                    clone_6.MouseButton1Down:connect(function() -- Line 606
                        --[[ Upvalues[6]:
                            [1]: var135_upvw (read and write)
                            [2]: Inventory_upvr_2 (readonly)
                            [3]: var33_upvw (copied, read and write)
                            [4]: v_9_upvr (readonly)
                            [5]: ConvertTokens_upvr (copied, readonly)
                            [6]: var118_upvw (copied, read and write)
                        ]]
                        if not var135_upvw then
                        else
                            var135_upvw = false
                            Inventory_upvr_2.Visible = false
                            Inventory_upvr_2:ClearAllChildren()
                            var33_upvw = v_9_upvr.Name
                            ConvertTokens_upvr.TokenBtn.ImageLabel.Image = "rbxgameasset://Images/"..v_9_upvr.Name
                            ConvertTokens_upvr.TokenBtn.TextLabel.Text = v_9_upvr.Name
                            ConvertTokens_upvr.ConvertToken.Frame.BackgroundTransparency = 1
                            var118_upvw = true
                        end
                    end)
                else
                    SOME_2.Count.Value = SOME_2.Count.Value + 1
                    SOME_2.NumText.Text = "x "..SOME_2.Count.Value
                end
            end
            return
        end
        Inventory_upvr_2 = true
        var118_upvw = Inventory_upvr_2
    end
end
function loadCurrentDinos() -- Line 630
    --[[ Upvalues[5]:
        [1]: var118_upvw (read and write)
        [2]: children_upvw_2 (read and write)
        [3]: ConvertTokens_upvr (readonly)
        [4]: Dinosaurs_upvr (readonly)
        [5]: var32_upvw (read and write)
    ]]
    if not var118_upvw then
    else
        var118_upvw = false
        local len = #children_upvw_2
        if 0 < len then
            local ceiled_3 = math.ceil(len / 40)
            local Inventory_upvr = ConvertTokens_upvr.Inventory
            Inventory_upvr.Visible = true
            Inventory_upvr.CanvasSize = UDim2.new(1, 0, ceiled_3, 0)
            local var141 = 0
            for _, v_10_upvr in pairs(children_upvw_2) do
                local SOME_4 = Dinosaurs_upvr:FindFirstChild(v_10_upvr.Name)
                if SOME_4 and SOME_4.Tradeable.Value then
                    local clone_3 = script.DButton:Clone()
                    clone_3.Image = "rbxgameasset://Images/"..v_10_upvr.Name
                    clone_3.Size = UDim2.new(0.125, 0, (1) / (5 * ceiled_3), 0)
                    clone_3.Position = UDim2.new(var141 * 0.125, 0, (0) * ((1) / (5 * ceiled_3)), 0)
                    if var141 == 7 then
                    else
                    end
                    clone_3.ZIndex = 8
                    clone_3.TextLabel.Text = v_10_upvr.Name
                    clone_3.Parent = Inventory_upvr
                    local var149_upvw = true
                    clone_3.MouseButton1Down:connect(function() -- Line 666
                        --[[ Upvalues[6]:
                            [1]: var149_upvw (read and write)
                            [2]: Inventory_upvr (readonly)
                            [3]: var32_upvw (copied, read and write)
                            [4]: v_10_upvr (readonly)
                            [5]: ConvertTokens_upvr (copied, readonly)
                            [6]: var118_upvw (copied, read and write)
                        ]]
                        if not var149_upvw then
                        else
                            var149_upvw = false
                            Inventory_upvr.Visible = false
                            Inventory_upvr:ClearAllChildren()
                            var32_upvw = v_10_upvr.Name
                            ConvertTokens_upvr.SkinBtn.Image = "rbxgameasset://Images/"..v_10_upvr.Name
                            ConvertTokens_upvr.SkinBtn.TextLabel.Text = v_10_upvr.Name
                            ConvertTokens_upvr.ConvertSkin.Frame.BackgroundTransparency = 1
                            var118_upvw = true
                        end
                    end)
                end
            end
            return
        end
        Inventory_upvr = true
        var118_upvw = Inventory_upvr
    end
end
ConvertTokens_upvr.SkinBtn.MouseButton1Down:connect(loadCurrentDinos)
ConvertTokens_upvr.TokenBtn.MouseButton1Down:connect(loadCurrentTokens)
ConvertTokens_upvr.ConvertSkin.MouseButton1Down:connect(function() -- Line 691
    --[[ Upvalues[8]:
        [1]: var118_upvw (read and write)
        [2]: var40_upvw (read and write)
        [3]: var32_upvw (read and write)
        [4]: ConvertTokens_upvr (readonly)
        [5]: GameFunctions_upvr (readonly)
        [6]: children_upvw_2 (read and write)
        [7]: MemoryCard_upvr (readonly)
        [8]: children_upvw (read and write)
    ]]
    if not var118_upvw then
    else
        var118_upvw = false
        var40_upvw = false
        if var32_upvw ~= "None" then
            ConvertTokens_upvr.Message.Text = "Converting Skin, and saving please wait! ^.^"
            GameFunctions_upvr.ConvertSkin:InvokeServer(var32_upvw)
            var32_upvw = "None"
            ConvertTokens_upvr.SkinBtn.Image = ""
            ConvertTokens_upvr.SkinBtn.TextLabel.Text = "Empty"
            ConvertTokens_upvr.ConvertSkin.Frame.BackgroundTransparency = 0.3
            ConvertTokens_upvr.Message.Text = "Converting and saving Successful! Updating Menu w/ current data!"
            children_upvw_2 = MemoryCard_upvr.Dinosaurs:GetChildren()
            children_upvw = MemoryCard_upvr.Tokens:GetChildren()
            ConvertTokens_upvr.Message.Text = "Finished!"
        end
        task.wait(0.1)
        var40_upvw = true
        var118_upvw = true
        ConvertTokens_upvr.Message.Text = ""
    end
end)
ConvertTokens_upvr.ConvertToken.MouseButton1Down:connect(function() -- Line 718
    --[[ Upvalues[8]:
        [1]: var118_upvw (read and write)
        [2]: var40_upvw (read and write)
        [3]: var33_upvw (read and write)
        [4]: GameFunctions_upvr (readonly)
        [5]: ConvertTokens_upvr (readonly)
        [6]: children_upvw_2 (read and write)
        [7]: MemoryCard_upvr (readonly)
        [8]: children_upvw (read and write)
    ]]
    if not var118_upvw then
    else
        var118_upvw = false
        var40_upvw = false
        if var33_upvw ~= "None" then
            GameFunctions_upvr.ConvertToken:InvokeServer(var33_upvw)
            var33_upvw = "None"
            ConvertTokens_upvr.TokenBtn.ImageLabel.Image = ""
            ConvertTokens_upvr.TokenBtn.TextLabel.Text = "Empty"
            ConvertTokens_upvr.ConvertToken.Frame.BackgroundTransparency = 0.3
            ConvertTokens_upvr.Message.Text = "Converting and saving Successful! Updating Menu w/ current data!"
            children_upvw_2 = MemoryCard_upvr.Dinosaurs:GetChildren()
            children_upvw = MemoryCard_upvr.Tokens:GetChildren()
            ConvertTokens_upvr.Message.Text = "Finished!"
        end
        task.wait(0.1)
        var40_upvw = true
        var118_upvw = true
        ConvertTokens_upvr.Message.Text = ""
    end
end)
local GameEvents_upvr = workspace:WaitForChild("GameEvents")
RequestTrade_upvr.Trade.Send.MouseButton1Down:connect(function() -- Line 744
    --[[ Upvalues[4]:
        [1]: var31_upvw (read and write)
        [2]: tbl_upvw (read and write)
        [3]: tbl_upvw_3 (read and write)
        [4]: GameEvents_upvr (readonly)
    ]]
    -- KONSTANTERROR: [0] 1. Error Block 1 start (CF ANALYSIS FAILED)
    local var154 = var31_upvw
    -- KONSTANTERROR: [0] 1. Error Block 1 end (CF ANALYSIS FAILED)
    -- KONSTANTERROR: [27] 21. Error Block 14 start (CF ANALYSIS FAILED)
    if var154 then
        GameEvents_upvr.SendTrade:FireServer(var31_upvw, tbl_upvw, tbl_upvw_3)
        ResetRequestFrame()
    end
    -- KONSTANTERROR: [27] 21. Error Block 14 end (CF ANALYSIS FAILED)
    -- KONSTANTERROR: [40] 31. Error Block 13 start (CF ANALYSIS FAILED)
    -- KONSTANTERROR: [40] 31. Error Block 13 end (CF ANALYSIS FAILED)
end)
RequestTradeBtn_upvr.MouseButton1Down:connect(function() -- Line 772
    --[[ Upvalues[1]:
        [1]: var40_upvw (read and write)
    ]]
    if not var40_upvw then
    else
        var40_upvw = false
        StartRequest()
    end
end)
IncomingTradesBtn_upvr.MouseButton1Down:connect(function() -- Line 778
    --[[ Upvalues[1]:
        [1]: var40_upvw (read and write)
    ]]
    if not var40_upvw then
    else
        var40_upvw = false
        StartIncomingTrades()
    end
end)
ConvertBtn_upvr.MouseButton1Down:connect(function() -- Line 784
    --[[ Upvalues[1]:
        [1]: var40_upvw (read and write)
    ]]
    if not var40_upvw then
    else
        var40_upvw = false
        StartConvertTokens()
    end
end)
local var158_upvw = true
function resetMenu() -- Line 791
    --[[ Upvalues[6]:
        [1]: MapSelection_upvr (readonly)
        [2]: DNAStore_upvr (readonly)
        [3]: TradingFrame_upvr (readonly)
        [4]: EggFrame_upvr (readonly)
        [5]: MenuButtons_upvr (readonly)
        [6]: var158_upvw (read and write)
    ]]
    MapSelection_upvr.Visible = false
    DNAStore_upvr.Visible = false
    TradingFrame_upvr.Visible = false
    EggFrame_upvr.Visible = false
    MenuButtons_upvr.Visible = true
    var158_upvw = true
end
local SOME_10_upvr = LocalPlayer_upvr:WaitForChild(LocalPlayer_upvr.UserId)
MenuButtons_upvr:WaitForChild("OpenBtn").MouseButton1Down:connect(function() -- Line 802
    --[[ Upvalues[5]:
        [1]: var40_upvw (read and write)
        [2]: var158_upvw (read and write)
        [3]: SOME_10_upvr (readonly)
        [4]: TradingFrame_upvr (readonly)
        [5]: MenuButtons_upvr (readonly)
    ]]
    if not var40_upvw then
    else
        if not var158_upvw then return end
        if SOME_10_upvr.menuEnabled.Value then
            var158_upvw = false
            TradingFrame_upvr.Visible = true
            MenuButtons_upvr.Visible = false
            StartRequest()
        end
    end
end)
Buttons_upvr:WaitForChild("CloseBtn").MouseButton1Down:connect(function() -- Line 816
    resetMenu()
end)
DNAStore_upvr:WaitForChild("Close").MouseButton1Down:connect(function() -- Line 821
    resetMenu()
end)
MenuButtons_upvr:WaitForChild("MapBtn").MouseButton1Down:connect(function() -- Line 825
    --[[ Upvalues[3]:
        [1]: var158_upvw (read and write)
        [2]: MapSelection_upvr (readonly)
        [3]: MenuButtons_upvr (readonly)
    ]]
    if not var158_upvw then
    else
        var158_upvw = false
        MapSelection_upvr.Visible = true
        MenuButtons_upvr.Visible = false
    end
end)
MapSelection_upvr.Close.MouseButton1Down:connect(function() -- Line 832
    resetMenu()
end)
EggFrame_upvr.Close.MouseButton1Down:connect(function() -- Line 838
    resetMenu()
end)
function loadEggBox(arg1) -- Line 848
    --[[ Upvalues[1]:
        [1]: HatchEggFrame_upvr (readonly)
    ]]
    local SOME_7 = script.Eggs:FindFirstChild(arg1)
    local len_3 = #SOME_7:GetChildren()
    if 0 < len_3 then
        local ceiled_2 = math.ceil(len_3 / 12)
        local Box = HatchEggFrame_upvr.Box
        Box:ClearAllChildren()
        Box.CanvasSize = UDim2.new(0, 0, ceiled_2, 0)
        local var171 = 0
        for i_13 = 1, len_3 do
            local SOME_8 = SOME_7:findFirstChild(""..i_13)
            local clone_4 = script.ImageLabel:Clone()
            clone_4.Image = "rbxgameasset://Images/"..SOME_8.Value
            clone_4.Size = UDim2.new(0.25, 0, (1) / (3 * ceiled_2), 0)
            clone_4.Position = UDim2.new(var171 * 0.25, 0, (0) * ((1) / (3 * ceiled_2)), 0)
            if var171 == 3 then
            else
            end
            clone_4.ZIndex = 2
            clone_4.TextLabel.Text = SOME_8.Value
            if SOME_8.Chance.Value == 1 then
                clone_4.TextLabel.TextColor3 = Color3.fromRGB(255, 255, 255)
            elseif SOME_8.Chance.Value == 2 then
                clone_4.TextLabel.TextColor3 = Color3.fromRGB(85, 170, 255)
            elseif SOME_8.Chance.Value == 3 then
                clone_4.TextLabel.TextColor3 = Color3.fromRGB(255, 85, 0)
            elseif SOME_8.Chance.Value == 4 then
                clone_4.TextLabel.TextColor3 = Color3.fromRGB(255, 0, 0)
            elseif SOME_8.Chance.Value == 5 then
                clone_4.TextLabel.TextColor3 = Color3.fromRGB(85, 0, 255)
            end
            clone_4.Parent = Box
        end
    end
end
local HatchingFrame_upvr = HatchEggFrame_upvr:WaitForChild("HatchingFrame")
local CloseBtn_upvr = HatchingFrame_upvr:WaitForChild("CloseBtn")
local var177_upvw = true
local var178_upvw = "Plush Egg"
local MessageBox_upvr = Background:WaitForChild("MessageBox")
HatchEggFrame_upvr:WaitForChild("HatchBtn").MouseButton1Down:connect(function() -- Line 904
    --[[ Upvalues[7]:
        [1]: var177_upvw (read and write)
        [2]: GameFunctions_upvr (readonly)
        [3]: var178_upvw (read and write)
        [4]: HatchingFrame_upvr (readonly)
        [5]: children_upvw (read and write)
        [6]: MemoryCard_upvr (readonly)
        [7]: MessageBox_upvr (readonly)
    ]]
    if not var177_upvw then
    else
        var177_upvw = false
        local any_InvokeServer_result1, any_InvokeServer_result2, any_InvokeServer_result3 = GameFunctions_upvr.HatchEgg:InvokeServer(var178_upvw)
        if any_InvokeServer_result1 then
            HatchingFrame_upvr.TextLabel.Text = "Now what's inside?"
            HatchingFrame_upvr.Display.ImageLabel.Image = ' '
            HatchingFrame_upvr.Display.Image = "rbxgameasset://Images/"..var178_upvw
            HatchingFrame_upvr.Visible = true
            for _ = 1, 3 do
                for _ = 1, 5 do
                    HatchingFrame_upvr.Display.Rotation = HatchingFrame_upvr.Display.Rotation - 1
                    wait()
                end
                for _ = 1, 10 do
                    HatchingFrame_upvr.Display.Rotation = HatchingFrame_upvr.Display.Rotation + 1
                    wait()
                end
                for _ = 1, 5 do
                    HatchingFrame_upvr.Display.Rotation = HatchingFrame_upvr.Display.Rotation - 1
                    wait()
                end
            end
            for _ = 1, 10 do
                HatchingFrame_upvr.Cover.BackgroundTransparency = HatchingFrame_upvr.Cover.BackgroundTransparency - 0.1
                wait()
            end
            HatchingFrame_upvr.Display.Image = "rbxgameasset://Images/Stone Token"
            HatchingFrame_upvr.Display.ImageLabel.Image = "rbxgameasset://Images/"..any_InvokeServer_result3
            wait(0.1)
            for _ = 1, 10 do
                HatchingFrame_upvr.Cover.BackgroundTransparency = HatchingFrame_upvr.Cover.BackgroundTransparency + 0.1
                wait()
            end
            HatchingFrame_upvr.TextLabel.Text = "Congrats on your "..any_InvokeServer_result3..'!'
            HatchingFrame_upvr.CloseBtn.Visible = true
            children_upvw = MemoryCard_upvr.Tokens:GetChildren()
            return
        end
        MessageBox_upvr.Frame.ScrollingFrame.Update.Text = any_InvokeServer_result2
        MessageBox_upvr.Visible = true
        wait(5)
        MessageBox_upvr.Visible = false
        var177_upvw = true
    end
end)
function loadEggs() -- Line 965
    --[[ Upvalues[3]:
        [1]: EggFrame_upvr (readonly)
        [2]: var178_upvw (read and write)
        [3]: HatchEggFrame_upvr (readonly)
    ]]
    local EggOrder = script.EggOrder
    local len_2 = #EggOrder:GetChildren()
    local ceiled = math.ceil(len_2 / 12)
    local var194 = 0
    for i_14 = 1, len_2 do
        local SOME_5_upvr = EggOrder:findFirstChild(""..i_14)
        local clone_5 = script.DButton:Clone()
        clone_5.Image = "rbxgameasset://Images/"..SOME_5_upvr.Value
        clone_5.Size = UDim2.new(0.25, 0, (1) / (3 * ceiled), 0)
        clone_5.Position = UDim2.new(var194 * 0.25, 0, (0) * ((1) / (3 * ceiled)), 0)
        if var194 == 3 then
        else
        end
        clone_5.ZIndex = 2
        clone_5.TextLabel.Text = SOME_5_upvr.Value
        clone_5.Parent = EggFrame_upvr.Box
        local var199_upvw = true
        clone_5.MouseButton1Down:connect(function() -- Line 993
            --[[ Upvalues[5]:
                [1]: var199_upvw (read and write)
                [2]: EggFrame_upvr (copied, readonly)
                [3]: var178_upvw (copied, read and write)
                [4]: SOME_5_upvr (readonly)
                [5]: HatchEggFrame_upvr (copied, readonly)
            ]]
            if not var199_upvw then
            else
                var199_upvw = false
                EggFrame_upvr.Visible = false
                var178_upvw = SOME_5_upvr.Value
                HatchEggFrame_upvr.EggImage.Image = "rbxgameasset://Images/"..SOME_5_upvr.Value
                HatchEggFrame_upvr.EggImage.TextLabel.Text = SOME_5_upvr.Value
                HatchEggFrame_upvr.EggPrice.Text = "Cost: "..SOME_5_upvr.Price.Value.." DNA"
                loadEggBox(SOME_5_upvr.Value)
                HatchEggFrame_upvr.Visible = true
                wait(1)
                var199_upvw = true
            end
        end)
    end
end
loadEggs()
CloseBtn_upvr.MouseButton1Down:connect(function() -- Line 1014
    --[[ Upvalues[3]:
        [1]: CloseBtn_upvr (readonly)
        [2]: HatchingFrame_upvr (readonly)
        [3]: var177_upvw (read and write)
    ]]
    CloseBtn_upvr.Visible = false
    HatchingFrame_upvr.Visible = false
    var177_upvw = true
end)
HatchEggFrame_upvr.BackBtn.MouseButton1Down:connect(function() -- Line 1020
    --[[ Upvalues[3]:
        [1]: var177_upvw (read and write)
        [2]: HatchEggFrame_upvr (readonly)
        [3]: EggFrame_upvr (readonly)
    ]]
    if var177_upvw then
        HatchEggFrame_upvr.Visible = false
        EggFrame_upvr.Visible = true
    end
end)
workspace:WaitForChild("ClientEvents").StartIncomingTrades.OnClientEvent:Connect(StartIncomingTrades)
